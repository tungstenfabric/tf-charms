LOG_LEVEL={{ log_level }}

{%- if pod_subnets %}
CLOUD_ORCHESTRATOR=kubernetes
KUBERNETES_POD_SUBNETS={{ pod_subnets }}
{%- if 'openstack' in cloud_orchestrators %}
AUTH_MODE=keystone
{%- endif %}
{%- else %}
CLOUD_ORCHESTRATOR={{ cloud_orchestrator }}
{%- endif %}

KEYSTONE_AUTH_ADMIN_TENANT={{ keystone_admin_tenant }}
KEYSTONE_AUTH_ADMIN_USER={{ keystone_admin_user }}
KEYSTONE_AUTH_ADMIN_PASSWORD={{ keystone_admin_password }}
{%- if keystone_user_domain_name and keystone_project_domain_name %}
KEYSTONE_AUTH_PROJECT_DOMAIN_NAME={{ keystone_project_domain_name }}
KEYSTONE_AUTH_USER_DOMAIN_NAME={{ keystone_user_domain_name }}
{%- endif %}
KEYSTONE_AUTH_URL_VERSION=/{{ keystone_api_suffix }}
KEYSTONE_AUTH_HOST={{ keystone_ip }}
KEYSTONE_AUTH_PROTO={{ keystone_protocol }}
KEYSTONE_AUTH_PUBLIC_PORT={{ keystone_public_port }}
KEYSTONE_AUTH_REGION_NAME={{ keystone_region }}

{%- if keystone_ssl_ca_path %}
KEYSTONE_AUTH_CA_CERTFILE={{ keystone_ssl_ca_path }}
KEYSTONE_AUTH_INSECURE=False
{%- else %}
KEYSTONE_AUTH_INSECURE=True
{%- endif %}

CONTROLLER_NODES={{ controller_servers|sort|join(',') }}
CONTROL_NODES={{ control_servers|sort|join(',') }}
ANALYTICS_NODES={{ analytics_servers|sort|join(',') }}

ANALYTICSDB_ENABLE=True
ANALYTICS_ALARM_ENABLE=True
ANALYTICS_SNMP_ENABLE=True

SSL_ENABLE={{ ssl_enabled }}
{%- if contrail_version >= 510 %}
CASSANDRA_SSL_ENABLE={{ ssl_enabled }}
RABBITMQ_USE_SSL={{ ssl_enabled }}
{%- endif %}

REDIS_SSL_ENABLE={{ ssl_enabled and config_analytics_ssl_available }}
ANALYTICS_API_SSL_ENABLE={{ ssl_enabled and config_analytics_ssl_available }}
CONFIG_API_SSL_ENABLE={{ ssl_enabled and config_analytics_ssl_available }}
{%- if ssl_enabled %}
SERVER_CERTFILE=/etc/contrail/ssl/certs/server.pem
SERVER_KEYFILE=/etc/contrail/ssl/private/server-privkey.pem
SERVER_CA_CERTFILE=/etc/contrail/ssl/certs/ca-cert.pem
{# not to use in containers - just to inform docker to restart them if certs have been changed #}
CERTS_HASH={{ certs_hash }}
{%- endif %}

METADATA_PROXY_SECRET={{ metadata_shared_secret }}

AGENT_MODE={{ agent_mode }}
DPDK_UIO_DRIVER={{ dpdk_driver }}
CPU_CORE_MASK={{ dpdk_coremask }}
SERVICE_CORE_MASK={{ dpdk_service_coremask }}
DPDK_CTRL_THREAD_MASK={{ dpdk_ctrl_thread_coremask }}

HUGE_PAGES={{ dpdk_hugepages }}
{%- if agent_mode == 'kernel' %}
HUGE_PAGES_1GB={{ hugepages_1g if hugepages_1g else '0' }}
HUGE_PAGES_2MB={{ hugepages_2m if hugepages_2m else '0' }}
{%- endif %}
DPDK_COMMAND_ADDITIONAL_ARGS={{ dpdk_additional_args }}

{%- if physical_interface %}
PHYSICAL_INTERFACE={{ physical_interface }}
{%- endif %}
VROUTER_GATEWAY={{ vrouter_gateway }}
VROUTER_ENCRYPTION=FALSE
VROUTER_HOSTNAME={{ hostname }}

{%- if sriov_physical_interface and sriov_numvfs %}
SRIOV_PHYSICAL_INTERFACE={{ sriov_physical_interface }}
SRIOV_VF={{ sriov_numvfs }}
{%- endif %}

{%- if kube_manager_token %}
K8S_TOKEN={{ kube_manager_token }}
KUBERNETES_API_SERVER={{ kubernetes_api_server }}
KUBERNETES_API_SECURE_PORT={{ kubernetes_api_secure_port }}
{%- endif %}

{%- for section in plugin_settings %}
{%- for key, value in plugin_settings[section].items() %}
VROUTER_AGENT__{{section}}__{{key}}={{value}}
{%- endfor %}
{%- endfor %}

{%- if csn_mode and csn_mode != '' %}
TSN_AGENT_MODE={{ csn_mode }}
TSN_NODES={{ tsn_nodes | sort | join(',') }}
{%- endif %}

{%- if max_vm_flows != '' %}
VROUTER_AGENT__FLOWS__max_vm_flows={{ max_vm_flows }}
{%- endif %}
