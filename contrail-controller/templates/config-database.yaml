version: '2'
volumes:
 config_cassandra:
 config_zookeeper:
services:
  node-init:
    container_name: "configdatabase_node-init_1"
    image: "{{ container_registry }}/contrail-node-init:{{ contrail_version_tag }}"
    env_file: /etc/contrail/common_config.env
    environment:
      - CONTRAIL_STATUS_IMAGE="{{ container_registry }}/contrail-status:{{ contrail_version_tag }}"
    privileged: true
    pid: host
    network_mode: "host"
    volumes:
      - /usr/bin:/host/usr/bin
      - /etc/contrail/ssl/{{ module }}:/etc/contrail/ssl
      - /etc/sysctl.d:/etc/sysctl.d
      - /etc/hosts:/etc/hosts
      - /var/log/contrail:/var/log/contrail
      - /etc/timezone:/etc/timezone
      - /etc/localtime:/etc/localtime
      - /var/crashes:/var/crashes
{{ logging | indent(4,True) }}
  nodemgr:
    container_name: "configdatabase_nodemgr_1"
    image: "{{ container_registry }}/contrail-nodemgr:{{ contrail_version_tag }}"
    env_file: /etc/contrail/common_config.env
    environment:
      - NODE_TYPE=config-database
      - CASSANDRA_CQL_PORT=9041
      - CASSANDRA_JMX_LOCAL_PORT=7201
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    volumes_from:
      - node-init
    depends_on:
      - node-init
    restart: always
{{ logging | indent(4,True) }}
{% if contrail_version >= 2002 %}
  provisioner:
    container_name: "configdatabase_provisioner_1"
    image: "{{ container_registry }}/contrail-provisioner:{{ contrail_version_tag }}"
    env_file:
      - /etc/contrail/common_config.env
    environment:
      - NODE_TYPE=config-database
    network_mode: "host"
    volumes_from:
      - node-init
    depends_on:
      - node-init
    restart: on-failure
{{ logging | indent(4,True) }}
{% endif %}
  cassandra:
    container_name: "configdatabase_cassandra_1"
    image: "{{ container_registry }}/contrail-external-cassandra:{{ contrail_version_tag }}"
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    env_file: /etc/contrail/common_config.env
    environment:
      - CASSANDRA_SEEDS={{ controller_servers|sort|join(',') }}
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=contrail_database
      - CASSANDRA_PORT=9161
      - CASSANDRA_CQL_PORT=9041
      - CASSANDRA_SSL_STORAGE_PORT=7013
      - CASSANDRA_STORAGE_PORT=7012
      - CASSANDRA_JMX_LOCAL_PORT=7201
      - NODE_TYPE=config-database
    volumes:
      - config_cassandra:/var/lib/cassandra/data
    {% if contrail_version >= 2008 %}
      - /var/log/contrail/config-database:/var/log/cassandra
    {% endif %}
    volumes_from:
      - node-init
    depends_on:
      - node-init
    network_mode: "host"
    restart: always
{{ logging | indent(4,True) }}
  zookeeper:
    container_name: "configdatabase_zookeeper_1"
    image: "{{ container_registry }}/contrail-external-zookeeper:{{ contrail_version_tag }}"
    env_file: /etc/contrail/common_config.env
    environment:
      - ZOOKEEPER_NODES={{ controller_servers|sort|join(',') }}
      - ZOOKEEPER_PORTS=2888:3888
      - ZOOKEEPER_PORT=2181
      - NODE_TYPE=config-database
    volumes:
      - config_zookeeper:/data
      - config_zookeeper:/datalog
    {% if contrail_version >= 2008 %}
      - /var/log/contrail/zookeeper:/var/log/zookeeper
    {% endif %}
    volumes_from:
      - node-init
    depends_on:
      - node-init
    network_mode: "host"
    restart: always
{{ logging | indent(4,True) }}
  rabbitmq:
    container_name: "configdatabase_rabbitmq_1"
    image: "{{ container_registry }}/contrail-external-rabbitmq:{{ contrail_version_tag }}"
    env_file: /etc/contrail/common_config.env
    environment:
      - RABBITMQ_NODES={{ controller_servers|sort|join(',') }}
      - RABBITMQ_ERLANG_COOKIE=abcdefg
      - NODE_TYPE=config-database
      - RABBITMQ_LOGS=/var/log/rabbitmq/rabbitmq.log
      - RAMMITMQ_SASL_LOGS=/var/log/rabbitmq/rabbitmq_sasl.log
    {% if contrail_version >= 2008 %}
    volumes:
      - /var/log/contrail/rabbitmq:/var/log/rabbitmq
    {% endif %}
    volumes_from:
      - node-init
    depends_on:
      - node-init
    network_mode: "host"
    restart: always
{{ logging | indent(4,True) }}
