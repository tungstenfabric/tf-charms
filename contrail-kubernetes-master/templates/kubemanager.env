{%- if nested_mode %}

KUBEMANAGER_NESTED_MODE=1
{%- for key, value in nested_mode_config.items() %}
{{key}}={{value}}
{%- endfor %}

{%- else %}

CONTROLLER_NODES={{ controller_servers|sort|join(',') }}
CONTROL_NODES={{ control_servers|sort|join(',') }}
ANALYTICS_NODES={{ analytics_servers|sort|join(',') }}
# to be able to reach internet from POD-s when KUBERNETES_IP_FABRIC_SNAT is "true"
DIST_SNAT_PROTO_PORT_LIST="tcp:1024,udp:1024"

{%- endif %}

LOG_LEVEL={{ log_level }}
CLOUD_ORCHESTRATOR={{ cloud_orchestrator }}
KUBEMANAGER_NODES={{ kubemanager_servers|sort|join(',') }}

ANALYTICSDB_ENABLE=True
ANALYTICS_ALARM_ENABLE=True
ANALYTICS_SNMP_ENABLE=True

SSL_ENABLE={{ ssl_enabled }}
{%- if contrail_version >= 510 %}
CASSANDRA_SSL_ENABLE={{ ssl_enabled }}
RABBITMQ_USE_SSL={{ ssl_enabled }}
{%- endif %}

REDIS_SSL_ENABLE={{ ssl_enabled and config_analytics_ssl_available }}
ANALYTICS_API_SSL_ENABLE={{ ssl_enabled and config_analytics_ssl_available }}
CONFIG_API_SSL_ENABLE={{ ssl_enabled and config_analytics_ssl_available }}
{%- if ssl_enabled %}
SERVER_CERTFILE=/etc/contrail/ssl/certs/server.pem
SERVER_KEYFILE=/etc/contrail/ssl/private/server-privkey.pem
SERVER_CA_CERTFILE=/etc/contrail/ssl/certs/ca-cert.pem
{%- endif %}

K8S_TOKEN={{ kube_manager_token }}
KUBERNETES_API_SERVER={{ kubernetes_api_server }}
KUBERNETES_API_SECURE_PORT={{ kubernetes_api_secure_port }}
KUBERNETES_CLUSTER_NAME={{ cluster_name }}
KUBERNETES_CLUSTER_PROJECT={{ cluster_project }}
KUBERNETES_CLUSTER_NETWORK={{ cluster_network }}
KUBERNETES_POD_SUBNETS={{ pod_subnets }}
KUBERNETES_IP_FABRIC_SUBNETS={{ip_fabric_subnets }}
KUBERNETES_SERVICE_SUBNETS={{ service_subnets }}
KUBERNETES_IP_FABRIC_FORWARDING={{ ip_fabric_forwarding }}
KUBERNETES_IP_FABRIC_SNAT={{ ip_fabric_snat }}
KUBERNETES_HOST_NETWORK_SERVICE={{ host_network_service }}
KUBERNETES_PUBLIC_FIP_POOL={{ public_fip_pool }}
